name: CD

on:
  push:
    branches: [ staging, main ]

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set image name
        id: vars
        run: |
          REPO=${{ github.repository }}
          IMAGE="ghcr.io/${REPO,,}/ai-learning-assistant"
          echo "image=$IMAGE" >> $GITHUB_OUTPUT
      - name: Build and push (staging/main)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ steps.vars.outputs.image }}:${{ github.sha }}
            ${{ steps.vars.outputs.image }}:${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Generate .env from secrets
        run: |
          echo "FLASK_ENV=production" > .env
          echo "HOST=0.0.0.0" >> .env
          echo "PORT=8888" >> .env
          echo "DEEPSEEK_API_KEY=${{ secrets.DEEPSEEK_API_KEY }}" >> .env
          echo "DEEPSEEK_API_BASE_URL=${{ secrets.DEEPSEEK_API_BASE_URL }}" >> .env
          echo "MLFLOW_TRACKING_URI=${{ secrets.MLFLOW_TRACKING_URI }}" >> .env
          echo "MLFLOW_TRACKING_USERNAME=${{ secrets.MLFLOW_TRACKING_USERNAME }}" >> .env
          echo "MLFLOW_TRACKING_PASSWORD=${{ secrets.MLFLOW_TRACKING_PASSWORD }}" >> .env
          echo "MODEL_URI=${{ secrets.MODEL_URI }}" >> .env
      - name: Upload env artifact
        uses: actions/upload-artifact@v4
        with:
          name: env-${{ github.ref_name }}
          path: .env
